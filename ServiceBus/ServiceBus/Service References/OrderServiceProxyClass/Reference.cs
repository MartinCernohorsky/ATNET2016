//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceBus.OrderServiceProxyClass {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderServiceProxyClass.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        SharedLibs.DataContracts.Order GetOrder(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Order> GetOrderAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrders", ReplyAction="http://tempuri.org/IOrderService/GetAllOrdersResponse")]
        SharedLibs.DataContracts.Orders GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrders", ReplyAction="http://tempuri.org/IOrderService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Orders> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        SharedLibs.DataContracts.Result AddOrder(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address address, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddOrderAsync(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address address, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderByObject", ReplyAction="http://tempuri.org/IOrderService/AddOrderByObjectResponse")]
        SharedLibs.DataContracts.Result AddOrderByObject(SharedLibs.DataContracts.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderByObject", ReplyAction="http://tempuri.org/IOrderService/AddOrderByObjectResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddOrderByObjectAsync(SharedLibs.DataContracts.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/EditOrder", ReplyAction="http://tempuri.org/IOrderService/EditOrderResponse")]
        SharedLibs.DataContracts.Order EditOrder(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address deliveryAddress, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime deliveryDate, SharedLibs.Enums.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/EditOrder", ReplyAction="http://tempuri.org/IOrderService/EditOrderResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Order> EditOrderAsync(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address deliveryAddress, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime deliveryDate, SharedLibs.Enums.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        SharedLibs.DataContracts.Result DeleteOrder(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> DeleteOrderAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChangeOrderState", ReplyAction="http://tempuri.org/IOrderService/ChangeOrderStateResponse")]
        SharedLibs.DataContracts.Order ChangeOrderState(System.Guid guid, SharedLibs.Enums.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChangeOrderState", ReplyAction="http://tempuri.org/IOrderService/ChangeOrderStateResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Order> ChangeOrderStateAsync(System.Guid guid, SharedLibs.Enums.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SendEmail", ReplyAction="http://tempuri.org/IOrderService/SendEmailResponse")]
        SharedLibs.DataContracts.Result SendEmail(SharedLibs.DataContracts.User user, string emailText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SendEmail", ReplyAction="http://tempuri.org/IOrderService/SendEmailResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> SendEmailAsync(SharedLibs.DataContracts.User user, string emailText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateInvoice", ReplyAction="http://tempuri.org/IOrderService/CreateInvoiceResponse")]
        SharedLibs.DataContracts.Result CreateInvoice(SharedLibs.DataContracts.User user, SharedLibs.DataContracts.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateInvoice", ReplyAction="http://tempuri.org/IOrderService/CreateInvoiceResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> CreateInvoiceAsync(SharedLibs.DataContracts.User user, SharedLibs.DataContracts.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : ServiceBus.OrderServiceProxyClass.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<ServiceBus.OrderServiceProxyClass.IOrderService>, ServiceBus.OrderServiceProxyClass.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SharedLibs.DataContracts.Order GetOrder(System.Guid guid) {
            return base.Channel.GetOrder(guid);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Order> GetOrderAsync(System.Guid guid) {
            return base.Channel.GetOrderAsync(guid);
        }
        
        public SharedLibs.DataContracts.Orders GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Orders> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public SharedLibs.DataContracts.Result AddOrder(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address address, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate) {
            return base.Channel.AddOrder(guid, basket, address, billingInformation, orderDate, deliveryDate);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddOrderAsync(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address address, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate) {
            return base.Channel.AddOrderAsync(guid, basket, address, billingInformation, orderDate, deliveryDate);
        }
        
        public SharedLibs.DataContracts.Result AddOrderByObject(SharedLibs.DataContracts.Order order) {
            return base.Channel.AddOrderByObject(order);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddOrderByObjectAsync(SharedLibs.DataContracts.Order order) {
            return base.Channel.AddOrderByObjectAsync(order);
        }
        
        public SharedLibs.DataContracts.Order EditOrder(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address deliveryAddress, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime deliveryDate, SharedLibs.Enums.OrderStateType orderState) {
            return base.Channel.EditOrder(guid, basket, deliveryAddress, billingInformation, deliveryDate, orderState);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Order> EditOrderAsync(System.Guid guid, SharedLibs.DataContracts.Basket basket, SharedLibs.DataContracts.Address deliveryAddress, SharedLibs.DataContracts.BillingInformation billingInformation, System.DateTime deliveryDate, SharedLibs.Enums.OrderStateType orderState) {
            return base.Channel.EditOrderAsync(guid, basket, deliveryAddress, billingInformation, deliveryDate, orderState);
        }
        
        public SharedLibs.DataContracts.Result DeleteOrder(System.Guid guid) {
            return base.Channel.DeleteOrder(guid);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> DeleteOrderAsync(System.Guid guid) {
            return base.Channel.DeleteOrderAsync(guid);
        }
        
        public SharedLibs.DataContracts.Order ChangeOrderState(System.Guid guid, SharedLibs.Enums.OrderStateType orderState) {
            return base.Channel.ChangeOrderState(guid, orderState);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Order> ChangeOrderStateAsync(System.Guid guid, SharedLibs.Enums.OrderStateType orderState) {
            return base.Channel.ChangeOrderStateAsync(guid, orderState);
        }
        
        public SharedLibs.DataContracts.Result SendEmail(SharedLibs.DataContracts.User user, string emailText) {
            return base.Channel.SendEmail(user, emailText);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> SendEmailAsync(SharedLibs.DataContracts.User user, string emailText) {
            return base.Channel.SendEmailAsync(user, emailText);
        }
        
        public SharedLibs.DataContracts.Result CreateInvoice(SharedLibs.DataContracts.User user, SharedLibs.DataContracts.Order order) {
            return base.Channel.CreateInvoice(user, order);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> CreateInvoiceAsync(SharedLibs.DataContracts.User user, SharedLibs.DataContracts.Order order) {
            return base.Channel.CreateInvoiceAsync(user, order);
        }
    }
}
