//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceBus.ProductTypeServiceProxyClass {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductTypeServiceProxyClass.IProductTypeService")]
    public interface IProductTypeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/AddProductType", ReplyAction="http://tempuri.org/IProductTypeService/AddProductTypeResponse")]
        SharedLibs.DataContracts.Result AddProductType(string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/AddProductType", ReplyAction="http://tempuri.org/IProductTypeService/AddProductTypeResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddProductTypeAsync(string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/GetProductType", ReplyAction="http://tempuri.org/IProductTypeService/GetProductTypeResponse")]
        SharedLibs.DataContracts.ProductType GetProductType(SharedLibs.Enums.ProductTypes productTypeE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/GetProductType", ReplyAction="http://tempuri.org/IProductTypeService/GetProductTypeResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.ProductType> GetProductTypeAsync(SharedLibs.Enums.ProductTypes productTypeE);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductTypeServiceChannel : ServiceBus.ProductTypeServiceProxyClass.IProductTypeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductTypeServiceClient : System.ServiceModel.ClientBase<ServiceBus.ProductTypeServiceProxyClass.IProductTypeService>, ServiceBus.ProductTypeServiceProxyClass.IProductTypeService {
        
        public ProductTypeServiceClient() {
        }
        
        public ProductTypeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductTypeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductTypeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductTypeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SharedLibs.DataContracts.Result AddProductType(string typeName) {
            return base.Channel.AddProductType(typeName);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddProductTypeAsync(string typeName) {
            return base.Channel.AddProductTypeAsync(typeName);
        }
        
        public SharedLibs.DataContracts.ProductType GetProductType(SharedLibs.Enums.ProductTypes productTypeE) {
            return base.Channel.GetProductType(productTypeE);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.ProductType> GetProductTypeAsync(SharedLibs.Enums.ProductTypes productTypeE) {
            return base.Channel.GetProductTypeAsync(productTypeE);
        }
    }
}
